{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/neha/Desktop/RaviNice/QA/QuestionAns/screens/QuestionPage.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, TextInput } from 'react-native-paper';\nimport Constants from 'expo-constants';\nvar DATA = [{\n  id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n  title: 'First Item'\n}, {\n  id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n  title: 'Second Item'\n}, {\n  id: '58694a0f-3da1-471f-bd96-145571e29d72',\n  title: 'Third Item'\n}];\n\nfunction Item(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      selected = _ref.selected,\n      onSelect = _ref.onSelect;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onSelect(id);\n    },\n    style: [styles.item, {\n      backgroundColor: selected ? '#6e3b6e' : '#f9c2ff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, title));\n}\n\nexport default function QuestionPage(props) {\n  var _React$useState = React.useState('Quiz'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Neeraj'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userName = _React$useState4[0],\n      setUserName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(' Q1: Hi What is React native'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      question = _React$useState6[0],\n      setQuestion = _React$useState6[1];\n\n  var _React$useState7 = React.useState(new Map()),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selected = _React$useState8[0],\n      setSelected = _React$useState8[1];\n\n  var onSelect = React.useCallback(function (id) {\n    var newSelected = new Map(selected);\n    newSelected.set(id, !selected.get(id));\n    setSelected(newSelected);\n  }, [selected]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    width: 100,\n    disabled: true,\n    label: text,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    width: 100,\n    disabled: true,\n    label: userName,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.QuestionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    disabled: true,\n    mode: \"flat\",\n    value: question,\n    onChangeText: function onChangeText(question) {\n      return setQuestion(question);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Item, {\n        id: item.id,\n        title: item.title,\n        selected: !!selected.get(item.id),\n        onSelect: onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    width: 150,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Back\"), React.createElement(Button, {\n    borderColor: '#008000',\n    width: 150,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Next\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  topLabel1: {\n    flexDirection: \"row\",\n    paddingLeft: 30,\n    paddingTop: 50,\n    borderColor: '#008000',\n    borderBottomWidth: 1\n  },\n  topLabel: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  Label: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    padding: 20,\n    justifyContent: 'space-between'\n  },\n  QuestionText: {\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  theme: {\n    color: '#A9A9A9',\n    backgroundColor: \"transparent\"\n  },\n  listContainer: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  button: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/Users/neha/Desktop/RaviNice/QA/QuestionAns/screens/QuestionPage.js"],"names":["StatusBar","React","Button","TextInput","Constants","DATA","id","title","Item","selected","onSelect","styles","item","backgroundColor","QuestionPage","props","useState","text","setText","userName","setUserName","question","setQuestion","Map","setSelected","useCallback","newSelected","set","get","container","Label","QuestionText","button","StyleSheet","create","flex","topLabel1","flexDirection","paddingLeft","paddingTop","borderColor","borderBottomWidth","topLabel","justifyContent","padding","theme","color","listContainer","marginTop","statusBarHeight","marginVertical","marginHorizontal","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, FlatList, SafeAreaView, TouchableOpacity, Alert } from 'react-native';\nimport { Button, TextInput } from 'react-native-paper';\nimport Constants from 'expo-constants';\n\nconst DATA = [\n    {\n        id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n        title: 'First Item',\n    },\n    {\n        id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n        title: 'Second Item',\n    },\n    {\n        id: '58694a0f-3da1-471f-bd96-145571e29d72',\n        title: 'Third Item',\n    },\n];\nfunction Item({ id, title, selected, onSelect }) {\n    return (\n        <TouchableOpacity\n            onPress={() => onSelect(id)}\n            style={[\n                styles.item,\n                { backgroundColor: selected ? '#6e3b6e' : '#f9c2ff' },\n            ]}\n        >\n            <Text>{title}</Text>\n\n        </TouchableOpacity>\n    );\n}\n\nexport default function QuestionPage(props) {\n    const [text, setText] = React.useState('Quiz');\n    const [userName, setUserName] = React.useState('Neeraj');\n    const [question, setQuestion] = React.useState(' Q1: Hi What is React native');\n    const [selected, setSelected] = React.useState(new Map());\n\n    const onSelect = React.useCallback(\n        id => {\n            const newSelected = new Map(selected);\n            newSelected.set(id, !selected.get(id));\n\n            setSelected(newSelected);\n        },\n        [selected],\n    );\n    return (\n        <View style={styles.container}>\n            <View style={styles.Label}>\n                <TextInput width={100} disabled={true}\n                    label={text} mode=\"outlined\"\n                />\n                <TextInput width={100} disabled={true}\n                    label={userName} mode=\"outlined\"\n                />\n\n            </View>\n\n            <View style={styles.QuestionText} >\n                <TextInput disabled={true}\n                    mode=\"flat\"\n                    value={question}\n                    onChangeText={question => setQuestion(question)}\n                />\n            </View>\n\n            <SafeAreaView style={styles.container}>\n                <FlatList\n                    data={DATA}\n                    renderItem={({ item }) => (\n                        <Item\n                            id={item.id}\n                            title={item.title}\n                            selected={!!selected.get(item.id)}\n                            onSelect={onSelect}\n                        />\n                    )}\n                    keyExtractor={item => item.id}\n                    extraData={selected}\n                />\n            </SafeAreaView>\n\n            <View style={styles.button}>\n                <Button width={150} mode='outlined'  >\n                    Back\n                 </Button>\n\n                <Button borderColor={'#008000'} width={150} mode='outlined' >\n                    Next\n                 </Button>\n            </View>\n\n\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n\n    },\n    topLabel1: {\n        flexDirection: \"row\",\n        paddingLeft: 30,\n        paddingTop: 50,\n        borderColor: '#008000',\n        borderBottomWidth: 1,\n    },\n    topLabel: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 20,\n\n    },\n    Label: {\n        flexDirection: 'row',\n        backgroundColor: '#fff',\n        padding: 20,\n        justifyContent: 'space-between',\n    },\n    QuestionText: {\n        backgroundColor: '#fff',\n        padding: 20,\n\n    },\n    theme: {\n        color: '#A9A9A9',\n        backgroundColor: \"transparent\"\n    },\n    listContainer: {\n        flex: 1,\n        marginTop: Constants.statusBarHeight,\n\n    },\n    item: {\n        backgroundColor: '#f9c2ff',\n        padding: 20,\n        marginVertical: 8,\n        marginHorizontal: 16,\n    },\n    title: {\n        fontSize: 32,\n    },\n    button: {\n      \n        flexDirection:'row',\n        justifyContent: 'space-between',\n        padding:20,\n         \n     },\n\n\n});\n\n\n"]},"metadata":{},"sourceType":"module"}