{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/neha/Desktop/RaviNice/QA/QuestionAns/screens/QuestionPage.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, TextInput } from 'react-native-paper';\nimport Constants from 'expo-constants';\nvar DATA = [{\n  id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n  title: 'First Item'\n}, {\n  id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n  title: 'Second Item'\n}, {\n  id: '58694a0f-3da1-471f-bd96-145571e29d72',\n  title: 'Third Item'\n}];\n\nfunction Item(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      selected = _ref.selected,\n      onSelect = _ref.onSelect;\n  Alert.text('ssss');\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onSelect(id);\n    },\n    style: [styles.item, {\n      backgroundColor: selected ? '#6e3b6e' : '#f9c2ff'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, title));\n}\n\nexport default function QuestionPage(props) {\n  var _React$useState = React.useState('Quiz'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Neeraj'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userName = _React$useState4[0],\n      setUserName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(' Q1: Hi What is React native'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      question = _React$useState6[0],\n      setQuestion = _React$useState6[1];\n\n  var _React$useState7 = React.useState(new Map()),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selected = _React$useState8[0],\n      setSelected = _React$useState8[1];\n\n  var onSelect = React.useCallback(function (id) {\n    var newSelected = new Map(selected);\n    newSelected.set(id, !selected.get(id));\n    setSelected(newSelected);\n  }, [selected]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    width: 100,\n    disabled: true,\n    label: text,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    width: 100,\n    disabled: true,\n    label: userName,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.QuestionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    disabled: true,\n    mode: \"flat\",\n    value: question,\n    onChangeText: function onChangeText(question) {\n      return setQuestion(question);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Item, {\n        id: item.id,\n        title: item.title,\n        selected: !!selected.get(item.id),\n        onSelect: onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  topLabel1: {\n    flexDirection: \"row\",\n    paddingLeft: 30,\n    paddingTop: 50,\n    borderColor: '#008000',\n    borderBottomWidth: 1\n  },\n  topLabel: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  Label: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    padding: 20,\n    justifyContent: 'space-between'\n  },\n  QuestionText: {\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  theme: {\n    color: '#A9A9A9',\n    backgroundColor: \"transparent\"\n  },\n  listContainer: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});","map":{"version":3,"sources":["/Users/neha/Desktop/RaviNice/QA/QuestionAns/screens/QuestionPage.js"],"names":["StatusBar","React","Button","TextInput","Constants","DATA","id","title","Item","selected","onSelect","Alert","text","styles","item","backgroundColor","QuestionPage","props","useState","setText","userName","setUserName","question","setQuestion","Map","setSelected","useCallback","newSelected","set","get","container","Label","QuestionText","StyleSheet","create","flex","topLabel1","flexDirection","paddingLeft","paddingTop","borderColor","borderBottomWidth","topLabel","justifyContent","padding","theme","color","listContainer","marginTop","statusBarHeight","marginVertical","marginHorizontal","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View ,FlatList,SafeAreaView,TouchableOpacity,Alert} from 'react-native';\nimport { Button, TextInput } from 'react-native-paper';\nimport Constants from 'expo-constants';\n\nconst DATA = [\n    {\n      id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n      title: 'First Item',\n    },\n    {\n      id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n      title: 'Second Item',\n    },\n    {\n      id: '58694a0f-3da1-471f-bd96-145571e29d72',\n      title: 'Third Item',\n    },\n  ];\n  function Item({ id, title, selected, onSelect }) {\n\n    Alert.text('ssss')\n    return (\n      <TouchableOpacity\n        onPress={() => onSelect(id)}\n        style={[\n          styles.item,\n          { backgroundColor: selected ? '#6e3b6e' : '#f9c2ff' },\n        ]}\n      >\n        <Text style={styles.title}>{title}</Text>\n      </TouchableOpacity>\n    );\n  }\n\nexport default function QuestionPage(props) {\n    const [text, setText] = React.useState('Quiz');\n    const [userName, setUserName] = React.useState('Neeraj');\n    const [question, setQuestion] = React.useState(' Q1: Hi What is React native');\n    const [selected, setSelected] = React.useState(new Map());\n\n    const onSelect = React.useCallback(\n      id => {\n        const newSelected = new Map(selected);\n        newSelected.set(id, !selected.get(id));\n  \n        setSelected(newSelected);\n      },\n      [selected],\n    );\n    return (\n        <View style={styles.container}>\n\n            {/* <View style={styles.topLabel}>\n                <Button  width={150} mode= 'outlined' mode=\"text\" >\n                    Quiz\n                 </Button>\n\n                <Button borderColor={'#008000'} width={150} mode='outlined' mode=\"text\" >\n                    Neeraj\n                 </Button>\n            </View> */}\n            <View style={styles.Label}>\n                <TextInput  width = {100}disabled={true}\n                    label= {text} mode=\"outlined\"\n                />\n                <TextInput width = {100} disabled={true}\n                    label= {userName} mode=\"outlined\"\n                />\n\n            </View>\n\n            <View style = {styles.QuestionText} >\n                <TextInput disabled={true} \n                   mode=\"flat\"\n                    value={question}\n                    onChangeText={question => setQuestion(question)}\n                />\n            </View>\n           \n            <SafeAreaView style={styles.container}>\n      <FlatList\n        data={DATA}\n        renderItem={({ item }) => (\n          <Item\n            id={item.id}\n            title={item.title}\n            selected={!!selected.get(item.id)}\n            onSelect={onSelect}\n          />\n        )}\n        keyExtractor={item => item.id}\n        extraData={selected}\n      />\n    </SafeAreaView>\n                \n           \n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n\n    },\n    topLabel1: {\n        flexDirection: \"row\",\n        paddingLeft: 30,\n        paddingTop: 50,\n        borderColor: '#008000',\n        borderBottomWidth: 1,\n    },\n    topLabel: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 20,\n\n    },\n    Label: {\n        flexDirection: 'row',\n        backgroundColor: '#fff',\n        padding: 20,\n        justifyContent: 'space-between',\n    },\n    QuestionText: {\n        backgroundColor: '#fff',\n        padding: 20,\n        \n    },\n     theme : {\n        color :'#A9A9A9',\n        backgroundColor: \"transparent\" \n        },\n        listContainer: {\n            flex: 1,\n            marginTop: Constants.statusBarHeight,\n            \n          },\n          item: {\n            backgroundColor: '#f9c2ff',\n            padding: 20,\n            marginVertical: 8,\n            marginHorizontal: 16,\n          },\n          title: {\n            fontSize: 32,\n          },\n      \n      \n\n});\n\n \n"]},"metadata":{},"sourceType":"module"}