{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/neha/Desktop/RaviNice/QA/QuestionAns/screens/QuestionPage.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, TextInput } from 'react-native-paper';\nexport default function QuestionPage(props) {\n  var _React$useState = React.useState('Quiz'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Neeraj'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userName = _React$useState4[0],\n      setUserName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(' Q1: Hi What is React native'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      question = _React$useState6[0],\n      setQuestion = _React$useState6[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    width: 100,\n    disabled: true,\n    label: text,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    width: 100,\n    disabled: true,\n    label: userName,\n    mode: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.QuestionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    disabled: true,\n    mode: \"flat\",\n    value: question,\n    placeholderTextColor: \"#A9A9A9\",\n    onChangeText: function onChangeText(question) {\n      return setQuestion(question);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  topLabel1: {\n    flexDirection: \"row\",\n    paddingLeft: 30,\n    paddingTop: 50,\n    borderColor: '#008000',\n    borderBottomWidth: 1\n  },\n  topLabel: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  Label: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    padding: 20,\n    justifyContent: 'space-between'\n  },\n  QuestionText: {\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  theme: {\n    color: '#A9A9A9',\n    backgroundColor: \"transparent\"\n  }\n});","map":{"version":3,"sources":["/Users/neha/Desktop/RaviNice/QA/QuestionAns/screens/QuestionPage.js"],"names":["StatusBar","React","Button","TextInput","QuestionPage","props","useState","text","setText","userName","setUserName","question","setQuestion","styles","container","Label","QuestionText","StyleSheet","create","flex","backgroundColor","topLabel1","flexDirection","paddingLeft","paddingTop","borderColor","borderBottomWidth","topLabel","justifyContent","padding","theme","color"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AAIA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,wBAChBJ,KAAK,CAACK,QAAN,CAAe,MAAf,CADgB;AAAA;AAAA,MACjCC,IADiC;AAAA,MAC3BC,OAD2B;;AAAA,yBAERP,KAAK,CAACK,QAAN,CAAe,QAAf,CAFQ;AAAA;AAAA,MAEjCG,QAFiC;AAAA,MAEvBC,WAFuB;;AAAA,yBAGRT,KAAK,CAACK,QAAN,CAAe,8BAAf,CAHQ;AAAA;AAAA,MAGjCK,QAHiC;AAAA,MAGvBC,WAHuB;;AAIxC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAY,IAAA,KAAK,EAAI,GAArB;AAAyB,IAAA,QAAQ,EAAE,IAAnC;AACI,IAAA,KAAK,EAAGR,IADZ;AACkB,IAAA,IAAI,EAAC,UADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAI,GAApB;AAAyB,IAAA,QAAQ,EAAE,IAAnC;AACI,IAAA,KAAK,EAAGE,QADZ;AACsB,IAAA,IAAI,EAAC,UAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAXJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAII,MAAM,CAACG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,IAArB;AACG,IAAA,IAAI,EAAC,MADR;AAEI,IAAA,KAAK,EAAEL,QAFX;AAGI,IAAA,oBAAoB,EAAG,SAH3B;AAII,IAAA,YAAY,EAAE,sBAAAA,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,CADJ;AAkCH;AAED,IAAME,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAM7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,WAAW,EAAE,EAFN;AAGPC,IAAAA,UAAU,EAAE,EAHL;AAIPC,IAAAA,WAAW,EAAE,SAJN;AAKPC,IAAAA,iBAAiB,EAAE;AALZ,GANkB;AAa7BC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,aAAa,EAAE,KADT;AAENM,IAAAA,cAAc,EAAE,eAFV;AAGNC,IAAAA,OAAO,EAAE;AAHH,GAbmB;AAmB7Bd,EAAAA,KAAK,EAAE;AACHO,IAAAA,aAAa,EAAE,KADZ;AAEHF,IAAAA,eAAe,EAAE,MAFd;AAGHS,IAAAA,OAAO,EAAE,EAHN;AAIHD,IAAAA,cAAc,EAAE;AAJb,GAnBsB;AAyB7BZ,EAAAA,YAAY,EAAE;AACVI,IAAAA,eAAe,EAAE,MADP;AAEVS,IAAAA,OAAO,EAAE;AAFC,GAzBe;AA8B5BC,EAAAA,KAAK,EAAG;AACLC,IAAAA,KAAK,EAAE,SADF;AAELX,IAAAA,eAAe,EAAE;AAFZ;AA9BoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Button, TextInput } from 'react-native-paper';\n\n\n\nexport default function QuestionPage(props) {\n    const [text, setText] = React.useState('Quiz');\n    const [userName, setUserName] = React.useState('Neeraj');\n    const [question, setQuestion] = React.useState(' Q1: Hi What is React native');\n    return (\n        <View style={styles.container}>\n\n            {/* <View style={styles.topLabel}>\n                <Button  width={150} mode= 'outlined' mode=\"text\" >\n                    Quiz\n                 </Button>\n\n                <Button borderColor={'#008000'} width={150} mode='outlined' mode=\"text\" >\n                    Neeraj\n                 </Button>\n            </View> */}\n            <View style={styles.Label}>\n                <TextInput  width = {100}disabled={true}\n                    label= {text} mode=\"outlined\"\n                />\n                <TextInput width = {100} disabled={true}\n                    label= {userName} mode=\"outlined\"\n                />\n\n            </View>\n\n            <View style = {styles.QuestionText} >\n                <TextInput disabled={true} \n                   mode=\"flat\"\n                    value={question}\n                    placeholderTextColor = '#A9A9A9'\n                    onChangeText={question => setQuestion(question)}\n                />\n\n            </View>\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n\n    },\n    topLabel1: {\n        flexDirection: \"row\",\n        paddingLeft: 30,\n        paddingTop: 50,\n        borderColor: '#008000',\n        borderBottomWidth: 1,\n    },\n    topLabel: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        padding: 20,\n\n    },\n    Label: {\n        flexDirection: 'row',\n        backgroundColor: '#fff',\n        padding: 20,\n        justifyContent: 'space-between',\n    },\n    QuestionText: {\n        backgroundColor: '#fff',\n        padding: 20,\n        \n    },\n     theme : {\n        color :'#A9A9A9',\n        backgroundColor: \"transparent\" \n        }\n      \n      \n\n});\n"]},"metadata":{},"sourceType":"module"}